name: Build and Package Python App 

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.2.3)'
        required: true
        type: string

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.8.x']

    outputs:
      win-artifact: ZjangDataViewer-win

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==4.10  

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --noconfirm --clean --windowed --onefile src/main.py `
            --add-data "src/_json;json" `
            --add-data "src/image;image" `
            --add-data "src/image/icon_packs/classic;image/icon_packs/classic" `
            --add-data "src/language;language" `
            --icon "src/image/icon_packs/classic/123Excel II.ico" `
            --target-arch=32bit

      - name: Move exe to src and prepare release folder
        run: |
          Move-Item -Path "dist/main.exe" -Destination "src/"
          Move-Item -Path "src" -Destination "release"

      - name: Zip release folder
        run: |
          Compress-Archive -Path "release/*" -DestinationPath "release.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ZjangDataViewer-win
          path: release.zip
          
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.8.x']

    outputs:
      linux-artifact: ZjangDataViewer-linux

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (GTK+ and others)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            pkg-config \
            libgl1 \
            libglib2.0-0 \
            libsm6 \
            libxrender1 \
            libxext6 \
            libpng-dev \
            libsdl2-dev

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==4.10

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --noconfirm --clean --windowed --onefile src/main.py \
            --add-data "src/_json:json" \
            --add-data "src/image:image" \
            --add-data "src/image/icon_packs/classic:image/icon_packs/classic" \
            --add-data "src/language:language" \

      - name: Move executable to src and prepare release folder
        run: |
          mv dist/main src/
          mv src release-linux

      - name: Tar.gz release folder
        run: |
          tar -czf release-linux.tar.gz release-linux

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ZjangDataViewer-linux
          path: release-linux.tar.gz

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: ZjangDataViewer-win
          path: artifacts

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ZjangDataViewer-linux
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          files: |
            artifacts/release.zip
            artifacts/release-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
